

/*
 * Workflow
 * This API uses the workflow capability of SAP Build Process Automation. With the API, you can, for example, start new workflow instances and work with tasks.  Note: These APIs are designed for loosely coupled clients. This means:  - If SAP Build Process Automation adds fields to responses, the API version number does not increase. Your client must ignore new fields. - The order of fields in responses and of entries in arrays may change. This applies unless the API provides an explicit means to specify the desired order. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package customer.demo.spa.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * WorkflowInstanceRoles
 */

// CHECKSTYLE:OFF
public class WorkflowInstanceRoles 
// CHECKSTYLE:ON
{
  @JsonProperty("viewerUsers")
  private Set<String> viewerUsers = new LinkedHashSet<>();

  @JsonProperty("viewerGroups")
  private Set<String> viewerGroups = new LinkedHashSet<>();

  @JsonProperty("adminUsers")
  private Set<String> adminUsers = new LinkedHashSet<>();

  @JsonProperty("adminGroups")
  private Set<String> adminGroups = new LinkedHashSet<>();

  @JsonProperty("contextViewerUsers")
  private Set<String> contextViewerUsers = new LinkedHashSet<>();

  @JsonProperty("contextViewerGroups")
  private Set<String> contextViewerGroups = new LinkedHashSet<>();

  @JsonProperty("contextAdminUsers")
  private Set<String> contextAdminUsers = new LinkedHashSet<>();

  @JsonProperty("contextAdminGroups")
  private Set<String> contextAdminGroups = new LinkedHashSet<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the viewerUsers of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param viewerUsers  The users that are assigned to the viewer role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles viewerUsers(@Nonnull final Set<String> viewerUsers) {
    this.viewerUsers = viewerUsers;
    return this;
  }
  /**
  * Add one viewerUsers instance to this {@link WorkflowInstanceRoles}.
  * @param viewerUsersItem The viewerUsers that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addviewerUsersItem( @Nonnull final String viewerUsersItem) {
    if (this.viewerUsers == null) {
      this.viewerUsers = new LinkedHashSet<>();
    }
    this.viewerUsers.add(viewerUsersItem);
    return this;
  }

   /**
   * The users that are assigned to the viewer role on this workflow instance.
   * @return viewerUsers  The viewerUsers of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getViewerUsers() {
    return viewerUsers;
  }

  /**
  * Set the viewerUsers of this {@link WorkflowInstanceRoles} instance.
  *
  * @param viewerUsers  The users that are assigned to the viewer role on this workflow instance.
  */
  public void setViewerUsers( @Nonnull final Set<String> viewerUsers) {
    this.viewerUsers = viewerUsers;
  }

   /**
   * Set the viewerGroups of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param viewerGroups  The groups that are assigned to the viewer role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles viewerGroups(@Nonnull final Set<String> viewerGroups) {
    this.viewerGroups = viewerGroups;
    return this;
  }
  /**
  * Add one viewerGroups instance to this {@link WorkflowInstanceRoles}.
  * @param viewerGroupsItem The viewerGroups that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addviewerGroupsItem( @Nonnull final String viewerGroupsItem) {
    if (this.viewerGroups == null) {
      this.viewerGroups = new LinkedHashSet<>();
    }
    this.viewerGroups.add(viewerGroupsItem);
    return this;
  }

   /**
   * The groups that are assigned to the viewer role on this workflow instance.
   * @return viewerGroups  The viewerGroups of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getViewerGroups() {
    return viewerGroups;
  }

  /**
  * Set the viewerGroups of this {@link WorkflowInstanceRoles} instance.
  *
  * @param viewerGroups  The groups that are assigned to the viewer role on this workflow instance.
  */
  public void setViewerGroups( @Nonnull final Set<String> viewerGroups) {
    this.viewerGroups = viewerGroups;
  }

   /**
   * Set the adminUsers of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param adminUsers  The users that are assigned to the admin role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles adminUsers(@Nonnull final Set<String> adminUsers) {
    this.adminUsers = adminUsers;
    return this;
  }
  /**
  * Add one adminUsers instance to this {@link WorkflowInstanceRoles}.
  * @param adminUsersItem The adminUsers that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addadminUsersItem( @Nonnull final String adminUsersItem) {
    if (this.adminUsers == null) {
      this.adminUsers = new LinkedHashSet<>();
    }
    this.adminUsers.add(adminUsersItem);
    return this;
  }

   /**
   * The users that are assigned to the admin role on this workflow instance.
   * @return adminUsers  The adminUsers of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getAdminUsers() {
    return adminUsers;
  }

  /**
  * Set the adminUsers of this {@link WorkflowInstanceRoles} instance.
  *
  * @param adminUsers  The users that are assigned to the admin role on this workflow instance.
  */
  public void setAdminUsers( @Nonnull final Set<String> adminUsers) {
    this.adminUsers = adminUsers;
  }

   /**
   * Set the adminGroups of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param adminGroups  The groups that are assigned to the admin role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles adminGroups(@Nonnull final Set<String> adminGroups) {
    this.adminGroups = adminGroups;
    return this;
  }
  /**
  * Add one adminGroups instance to this {@link WorkflowInstanceRoles}.
  * @param adminGroupsItem The adminGroups that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addadminGroupsItem( @Nonnull final String adminGroupsItem) {
    if (this.adminGroups == null) {
      this.adminGroups = new LinkedHashSet<>();
    }
    this.adminGroups.add(adminGroupsItem);
    return this;
  }

   /**
   * The groups that are assigned to the admin role on this workflow instance.
   * @return adminGroups  The adminGroups of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getAdminGroups() {
    return adminGroups;
  }

  /**
  * Set the adminGroups of this {@link WorkflowInstanceRoles} instance.
  *
  * @param adminGroups  The groups that are assigned to the admin role on this workflow instance.
  */
  public void setAdminGroups( @Nonnull final Set<String> adminGroups) {
    this.adminGroups = adminGroups;
  }

   /**
   * Set the contextViewerUsers of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param contextViewerUsers  The users that are assigned to the context viewer role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles contextViewerUsers(@Nonnull final Set<String> contextViewerUsers) {
    this.contextViewerUsers = contextViewerUsers;
    return this;
  }
  /**
  * Add one contextViewerUsers instance to this {@link WorkflowInstanceRoles}.
  * @param contextViewerUsersItem The contextViewerUsers that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addcontextViewerUsersItem( @Nonnull final String contextViewerUsersItem) {
    if (this.contextViewerUsers == null) {
      this.contextViewerUsers = new LinkedHashSet<>();
    }
    this.contextViewerUsers.add(contextViewerUsersItem);
    return this;
  }

   /**
   * The users that are assigned to the context viewer role on this workflow instance.
   * @return contextViewerUsers  The contextViewerUsers of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getContextViewerUsers() {
    return contextViewerUsers;
  }

  /**
  * Set the contextViewerUsers of this {@link WorkflowInstanceRoles} instance.
  *
  * @param contextViewerUsers  The users that are assigned to the context viewer role on this workflow instance.
  */
  public void setContextViewerUsers( @Nonnull final Set<String> contextViewerUsers) {
    this.contextViewerUsers = contextViewerUsers;
  }

   /**
   * Set the contextViewerGroups of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param contextViewerGroups  The groups that are assigned to the context viewer role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles contextViewerGroups(@Nonnull final Set<String> contextViewerGroups) {
    this.contextViewerGroups = contextViewerGroups;
    return this;
  }
  /**
  * Add one contextViewerGroups instance to this {@link WorkflowInstanceRoles}.
  * @param contextViewerGroupsItem The contextViewerGroups that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addcontextViewerGroupsItem( @Nonnull final String contextViewerGroupsItem) {
    if (this.contextViewerGroups == null) {
      this.contextViewerGroups = new LinkedHashSet<>();
    }
    this.contextViewerGroups.add(contextViewerGroupsItem);
    return this;
  }

   /**
   * The groups that are assigned to the context viewer role on this workflow instance.
   * @return contextViewerGroups  The contextViewerGroups of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getContextViewerGroups() {
    return contextViewerGroups;
  }

  /**
  * Set the contextViewerGroups of this {@link WorkflowInstanceRoles} instance.
  *
  * @param contextViewerGroups  The groups that are assigned to the context viewer role on this workflow instance.
  */
  public void setContextViewerGroups( @Nonnull final Set<String> contextViewerGroups) {
    this.contextViewerGroups = contextViewerGroups;
  }

   /**
   * Set the contextAdminUsers of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param contextAdminUsers  The users that are assigned to the context admin role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles contextAdminUsers(@Nonnull final Set<String> contextAdminUsers) {
    this.contextAdminUsers = contextAdminUsers;
    return this;
  }
  /**
  * Add one contextAdminUsers instance to this {@link WorkflowInstanceRoles}.
  * @param contextAdminUsersItem The contextAdminUsers that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addcontextAdminUsersItem( @Nonnull final String contextAdminUsersItem) {
    if (this.contextAdminUsers == null) {
      this.contextAdminUsers = new LinkedHashSet<>();
    }
    this.contextAdminUsers.add(contextAdminUsersItem);
    return this;
  }

   /**
   * The users that are assigned to the context admin role on this workflow instance.
   * @return contextAdminUsers  The contextAdminUsers of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getContextAdminUsers() {
    return contextAdminUsers;
  }

  /**
  * Set the contextAdminUsers of this {@link WorkflowInstanceRoles} instance.
  *
  * @param contextAdminUsers  The users that are assigned to the context admin role on this workflow instance.
  */
  public void setContextAdminUsers( @Nonnull final Set<String> contextAdminUsers) {
    this.contextAdminUsers = contextAdminUsers;
  }

   /**
   * Set the contextAdminGroups of this {@link WorkflowInstanceRoles} instance and return the same instance.
   *
   * @param contextAdminGroups  The groups that are assigned to the context admin role on this workflow instance.
   * @return The same instance of this {@link WorkflowInstanceRoles} class
   */
   @Nonnull public WorkflowInstanceRoles contextAdminGroups(@Nonnull final Set<String> contextAdminGroups) {
    this.contextAdminGroups = contextAdminGroups;
    return this;
  }
  /**
  * Add one contextAdminGroups instance to this {@link WorkflowInstanceRoles}.
  * @param contextAdminGroupsItem The contextAdminGroups that should be added
  * @return The same instance of type {@link WorkflowInstanceRoles}
  */
  @Nonnull public WorkflowInstanceRoles addcontextAdminGroupsItem( @Nonnull final String contextAdminGroupsItem) {
    if (this.contextAdminGroups == null) {
      this.contextAdminGroups = new LinkedHashSet<>();
    }
    this.contextAdminGroups.add(contextAdminGroupsItem);
    return this;
  }

   /**
   * The groups that are assigned to the context admin role on this workflow instance.
   * @return contextAdminGroups  The contextAdminGroups of this {@link WorkflowInstanceRoles} instance.
  **/
  @Nonnull public Set<String> getContextAdminGroups() {
    return contextAdminGroups;
  }

  /**
  * Set the contextAdminGroups of this {@link WorkflowInstanceRoles} instance.
  *
  * @param contextAdminGroups  The groups that are assigned to the context admin role on this workflow instance.
  */
  public void setContextAdminGroups( @Nonnull final Set<String> contextAdminGroups) {
    this.contextAdminGroups = contextAdminGroups;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link WorkflowInstanceRoles}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link WorkflowInstanceRoles} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("WorkflowInstanceRoles has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link WorkflowInstanceRoles} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final WorkflowInstanceRoles workflowInstanceRoles = (WorkflowInstanceRoles) o;
    return Objects.equals(this.cloudSdkCustomFields, workflowInstanceRoles.cloudSdkCustomFields) &&
        Objects.equals(this.viewerUsers, workflowInstanceRoles.viewerUsers) &&
        Objects.equals(this.viewerGroups, workflowInstanceRoles.viewerGroups) &&
        Objects.equals(this.adminUsers, workflowInstanceRoles.adminUsers) &&
        Objects.equals(this.adminGroups, workflowInstanceRoles.adminGroups) &&
        Objects.equals(this.contextViewerUsers, workflowInstanceRoles.contextViewerUsers) &&
        Objects.equals(this.contextViewerGroups, workflowInstanceRoles.contextViewerGroups) &&
        Objects.equals(this.contextAdminUsers, workflowInstanceRoles.contextAdminUsers) &&
        Objects.equals(this.contextAdminGroups, workflowInstanceRoles.contextAdminGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(viewerUsers, viewerGroups, adminUsers, adminGroups, contextViewerUsers, contextViewerGroups, contextAdminUsers, contextAdminGroups, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowInstanceRoles {\n");
    sb.append("    viewerUsers: ").append(toIndentedString(viewerUsers)).append("\n");
    sb.append("    viewerGroups: ").append(toIndentedString(viewerGroups)).append("\n");
    sb.append("    adminUsers: ").append(toIndentedString(adminUsers)).append("\n");
    sb.append("    adminGroups: ").append(toIndentedString(adminGroups)).append("\n");
    sb.append("    contextViewerUsers: ").append(toIndentedString(contextViewerUsers)).append("\n");
    sb.append("    contextViewerGroups: ").append(toIndentedString(contextViewerGroups)).append("\n");
    sb.append("    contextAdminUsers: ").append(toIndentedString(contextAdminUsers)).append("\n");
    sb.append("    contextAdminGroups: ").append(toIndentedString(contextAdminGroups)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

