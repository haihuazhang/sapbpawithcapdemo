

/*
 * Workflow
 * This API uses the workflow capability of SAP Build Process Automation. With the API, you can, for example, start new workflow instances and work with tasks.  Note: These APIs are designed for loosely coupled clients. This means:  - If SAP Build Process Automation adds fields to responses, the API version number does not increase. Your client must ignore new fields. - The order of fields in responses and of entries in arrays may change. This applies unless the API provides an explicit means to specify the desired order. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package customer.demo.spa.model;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import customer.demo.spa.model.TechnicalErrorErrorDetailsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

/**
 * TechnicalErrorError
 */

// CHECKSTYLE:OFF
public class TechnicalErrorError 
// CHECKSTYLE:ON
{
  @JsonProperty("code")
  private String code;

  @JsonProperty("message")
  private String message;

  @JsonProperty("logId")
  private String logId;

  @JsonProperty("details")
  private List<TechnicalErrorErrorDetailsInner> details = new ArrayList<>();

  @JsonAnySetter
  @JsonAnyGetter
  private final Map<String, Object> cloudSdkCustomFields = new LinkedHashMap<>();

   /**
   * Set the code of this {@link TechnicalErrorError} instance and return the same instance.
   *
   * @param code  The error category.
   * @return The same instance of this {@link TechnicalErrorError} class
   */
   @Nonnull public TechnicalErrorError code(@Nonnull final String code) {
    this.code = code;
    return this;
  }

   /**
   * The error category.
   * @return code  The code of this {@link TechnicalErrorError} instance.
  **/
  @Nonnull public String getCode() {
    return code;
  }

  /**
  * Set the code of this {@link TechnicalErrorError} instance.
  *
  * @param code  The error category.
  */
  public void setCode( @Nonnull final String code) {
    this.code = code;
  }

   /**
   * Set the message of this {@link TechnicalErrorError} instance and return the same instance.
   *
   * @param message  The error message.
   * @return The same instance of this {@link TechnicalErrorError} class
   */
   @Nonnull public TechnicalErrorError message(@Nonnull final String message) {
    this.message = message;
    return this;
  }

   /**
   * The error message.
   * @return message  The message of this {@link TechnicalErrorError} instance.
  **/
  @Nonnull public String getMessage() {
    return message;
  }

  /**
  * Set the message of this {@link TechnicalErrorError} instance.
  *
  * @param message  The error message.
  */
  public void setMessage( @Nonnull final String message) {
    this.message = message;
  }

   /**
   * Set the logId of this {@link TechnicalErrorError} instance and return the same instance.
   *
   * @param logId  The log ID referring to the error.
   * @return The same instance of this {@link TechnicalErrorError} class
   */
   @Nonnull public TechnicalErrorError logId(@Nonnull final String logId) {
    this.logId = logId;
    return this;
  }

   /**
   * The log ID referring to the error.
   * @return logId  The logId of this {@link TechnicalErrorError} instance.
  **/
  @Nonnull public String getLogId() {
    return logId;
  }

  /**
  * Set the logId of this {@link TechnicalErrorError} instance.
  *
  * @param logId  The log ID referring to the error.
  */
  public void setLogId( @Nonnull final String logId) {
    this.logId = logId;
  }

   /**
   * Set the details of this {@link TechnicalErrorError} instance and return the same instance.
   *
   * @param details  The details of this {@link TechnicalErrorError}
   * @return The same instance of this {@link TechnicalErrorError} class
   */
   @Nonnull public TechnicalErrorError details(@Nonnull final List<TechnicalErrorErrorDetailsInner> details) {
    this.details = details;
    return this;
  }
  /**
  * Add one details instance to this {@link TechnicalErrorError}.
  * @param detailsItem The details that should be added
  * @return The same instance of type {@link TechnicalErrorError}
  */
  @Nonnull public TechnicalErrorError adddetailsItem( @Nonnull final TechnicalErrorErrorDetailsInner detailsItem) {
    if (this.details == null) {
      this.details = new ArrayList<>();
    }
    this.details.add(detailsItem);
    return this;
  }

   /**
   * Get details
   * @return details  The details of this {@link TechnicalErrorError} instance.
  **/
  @Nonnull public List<TechnicalErrorErrorDetailsInner> getDetails() {
    return details;
  }

  /**
  * Set the details of this {@link TechnicalErrorError} instance.
  *
  * @param details  The details of this {@link TechnicalErrorError}
  */
  public void setDetails( @Nonnull final List<TechnicalErrorErrorDetailsInner> details) {
    this.details = details;
  }

  /**
   * Get the names of the unrecognizable properties of the {@link TechnicalErrorError}.
   * @return The set of properties names
   */
  @JsonIgnore
  @Nonnull
  public Set<String> getCustomFieldNames() {
    return cloudSdkCustomFields.keySet();
  }

  /**
   * Get the value of an unrecognizable property of this {@link TechnicalErrorError} instance.
   * @param name  The name of the property
   * @return The value of the property
   * @throws NoSuchElementException  If no property with the given name could be found.
   */
  @Nullable
  public Object getCustomField(@Nonnull final String name) throws NoSuchElementException {
    if( !cloudSdkCustomFields.containsKey(name) ) {
        throw new NoSuchElementException("TechnicalErrorError has no field with name '" + name + "'.");
    }
    return cloudSdkCustomFields.get(name);
  }

  /**
   * Set an unrecognizable property of this {@link TechnicalErrorError} instance. If the map previously contained a mapping
   * for the key, the old value is replaced by the specified value.
   * @param customFieldName The name of the property
   * @param customFieldValue The value of the property
   */
  @JsonIgnore
  public void setCustomField( @Nonnull String customFieldName, @Nullable Object customFieldValue )
  {
      cloudSdkCustomFields.put(customFieldName, customFieldValue);
  }


  @Override
  public boolean equals(@Nullable final java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    final TechnicalErrorError technicalErrorError = (TechnicalErrorError) o;
    return Objects.equals(this.cloudSdkCustomFields, technicalErrorError.cloudSdkCustomFields) &&
        Objects.equals(this.code, technicalErrorError.code) &&
        Objects.equals(this.message, technicalErrorError.message) &&
        Objects.equals(this.logId, technicalErrorError.logId) &&
        Objects.equals(this.details, technicalErrorError.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, message, logId, details, cloudSdkCustomFields);
  }

  @Override
  @Nonnull public String toString() {
    final StringBuilder sb = new StringBuilder();
    sb.append("class TechnicalErrorError {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    logId: ").append(toIndentedString(logId)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    cloudSdkCustomFields.forEach((k,v) -> sb.append("    ").append(k).append(": ").append(toIndentedString(v)).append("\n"));
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(final java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

